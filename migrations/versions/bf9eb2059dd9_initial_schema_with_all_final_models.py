"""Initial schema with all final models

Revision ID: bf9eb2059dd9
Revises: 
Create Date: 2025-07-03 16:40:50.231046

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bf9eb2059dd9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('company_name', sa.String(length=120), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_company_name'), ['company_name'], unique=True)

    op.create_table('discounts',
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('discounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_discounts_code'), ['code'], unique=True)

    op.create_table('inertia_bases',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pumps',
    sa.Column('sku', sa.String(length=80), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('kw', sa.String(length=20), nullable=True),
    sa.Column('poles', sa.Integer(), nullable=True),
    sa.Column('inertia_pn', sa.String(length=80), nullable=True),
    sa.Column('inertia_size', sa.String(length=80), nullable=True),
    sa.Column('standard_spring_pn', sa.String(length=80), nullable=True),
    sa.Column('standard_spring', sa.String(length=80), nullable=True),
    sa.Column('fifty_mm_static_spring_pn', sa.String(length=80), nullable=True),
    sa.Column('fifty_mm_spring', sa.String(length=80), nullable=True),
    sa.Column('qty_springs', sa.Integer(), nullable=True),
    sa.Column('pump_list', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pump_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ip56_list', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ip56_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ip66_list', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ip66_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('inertia_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('crossbar_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('standard_spring_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fifty_mm_spring_nett', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pumps', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pumps_sku'), ['sku'], unique=True)

    op.create_table('rubber_mounts',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seismic_springs',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'SALES', 'MANAGER', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('contacts',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=30), nullable=True),
    sa.Column('position', sa.String(length=120), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contacts_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contacts_email'), ['email'], unique=True)

    op.create_table('deals',
    sa.Column('project_name', sa.String(length=200), nullable=False),
    sa.Column('stage', sa.Enum('SALES_LEAD', 'TENDER', 'PROPOSAL', 'NEGOTIATION', 'WON', 'LOST', 'ABANDONED', name='dealstage'), nullable=False),
    sa.Column('deal_type', sa.Enum('HVAC', 'PLUMBING', 'HYDRONIC_HEATING', 'DATA_CENTRES', 'MERCHANT', 'WHOLESALER', 'OEM', name='dealtype'), nullable=False),
    sa.Column('state', sa.Enum('NSW', 'VIC', 'QLD', 'WA', 'SA', 'TAS', 'NT', 'ACT', name='australianstate'), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_name')
    )
    op.create_table('products',
    sa.Column('sku', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=120), nullable=True),
    sa.Column('subcategory', sa.String(length=120), nullable=True),
    sa.Column('series', sa.String(length=120), nullable=True),
    sa.Column('list_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discount_code', sa.String(length=10), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['discount_code'], ['discounts.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_sku'), ['sku'], unique=True)

    op.create_table('pump_assemblies',
    sa.Column('pump_id', sa.Integer(), nullable=False),
    sa.Column('assembly_name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pump_id'], ['pumps.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('assembly_name')
    )
    op.create_table('pump_configurations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('pump_sku', sa.String(length=80), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pump_sku'], ['pumps.sku'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pump_configurations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pump_configurations_pump_sku'), ['pump_sku'], unique=False)

    op.create_table('deal_companies',
    sa.Column('deal_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], ),
    sa.PrimaryKeyConstraint('deal_id', 'company_id')
    )
    op.create_table('deal_contacts',
    sa.Column('deal_id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ),
    sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], ),
    sa.PrimaryKeyConstraint('deal_id', 'contact_id')
    )
    op.create_table('quote_recipients',
    sa.Column('deal_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quotes',
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['quote_recipients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quote_options',
    sa.Column('quote_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('freight_charge', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quote_line_items',
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('discount', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('custom_sku', sa.String(length=80), nullable=True),
    sa.Column('custom_name', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['option_id'], ['quote_options.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quote_line_items')
    op.drop_table('quote_options')
    op.drop_table('quotes')
    op.drop_table('quote_recipients')
    op.drop_table('deal_contacts')
    op.drop_table('deal_companies')
    with op.batch_alter_table('pump_configurations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pump_configurations_pump_sku'))

    op.drop_table('pump_configurations')
    op.drop_table('pump_assemblies')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_sku'))

    op.drop_table('products')
    op.drop_table('deals')
    with op.batch_alter_table('contacts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contacts_email'))
        batch_op.drop_index(batch_op.f('ix_contacts_company_id'))

    op.drop_table('contacts')
    op.drop_table('users')
    op.drop_table('seismic_springs')
    op.drop_table('rubber_mounts')
    with op.batch_alter_table('pumps', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pumps_sku'))

    op.drop_table('pumps')
    op.drop_table('inertia_bases')
    with op.batch_alter_table('discounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_discounts_code'))

    op.drop_table('discounts')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_company_name'))

    op.drop_table('companies')
    # ### end Alembic commands ###
